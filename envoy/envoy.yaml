admin:
  access_log_path: /tmp/admin_access.log
  address:
    socket_address:
      protocol: TCP
      address: 127.0.0.1
      port_value: 9901
static_resources:
  listeners:
  - name: listener_0
    address:
      socket_address:
        protocol: TCP
        address: 0.0.0.0 # 监听的地址
        port_value: 10000 # 监听的端口
    filter_chains:
    - filters:
      - name: envoy.http_connection_manager # 过滤器，这里是http协议过滤器，详细配置参考: https://www.envoyproxy.io/docs/envoy/latest/api-v2/config/filter/network/http_connection_manager/v2/http_connection_manager.proto#envoy-api-msg-config-filter-network-http-connection-manager-v2-httpconnectionmanager
        typed_config:
          "@type": type.googleapis.com/envoy.config.filter.network.http_connection_manager.v2.HttpConnectionManager
          stat_prefix: ingress_http
          route_config: # 路由，将按顺序检查virtual_hosts中的每个路由条目。如果匹配，则使用路由并且不进行进一步的路由检查。
            name: local_route
            virtual_hosts: # 虚拟主机，这里可以配置根据域名或者path进行不同的代理（类似nginx中的server），详细配置参考: https://www.envoyproxy.io/docs/envoy/latest/api-v2/api/v2/route/route.proto#envoy-api-msg-route-virtualhost
            - name: local_service
              domains: ["*"]  #  指定匹配的域名，这里表示匹配所有域名
              routes:  # 将按顺序匹配传入请求的路由列表。将使用匹配的第一条路线。详细配置参考: https://www.envoyproxy.io/docs/envoy/latest/api-v2/api/v2/route/route.proto#envoy-api-msg-route-route
              - match: # 匹配规则（类似nginx的location），详细参考: https://www.envoyproxy.io/docs/envoy/latest/api-v2/api/v2/route/route.proto#envoy-api-msg-route-routematch
                  prefix: "/" 
                route:
                  host_rewrite: www.baidu.com  #表示在转发期间，主机头将与此值交换。
                  cluster: service_baidu  # 后端集群是那个（类似nginx里面指定upsteam）
          http_filters:
          - name: envoy.router
  clusters:
  - name: service_baidu # 定义cluster,(类似nginx里面定义upsteam) 详细配置参考: https://www.envoyproxy.io/docs/envoy/latest/api-v2/api/v2/cds.proto#cluster
    connect_timeout: 0.25s
    type: LOGICAL_DNS
    # Comment out the following line to test on v6 networks
    dns_lookup_family: V4_ONLY
    lb_policy: ROUND_ROBIN
    load_assignment:
      cluster_name: service_baidu
      endpoints:
      - lb_endpoints:
        - endpoint: # 后端地址，真正的后端地址
            address:
              socket_address: 
                address: www.baidu.com
                port_value: 443
    tls_context:
      sni: www.baidu.com
